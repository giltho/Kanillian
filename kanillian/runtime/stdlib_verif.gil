#internal

spec i__calloc(vnelem, velsize)
      [[ (vnelem == #n) *
         (velsize == #sz) *
         (types(#n: Int, #sz: Int)) ]]
      [[ (ret == {{ #loc, 0i }}) *
         types(#loc: Obj) *
         (#bytes == #n i* #sz) *
         <mem_zeros>(#loc, 0i, #bytes; "Freeable") *
         <mem_single>(#loc, -8i, "u64"; #bytes, "Freeable" ) *
         <mem_bounds>(#loc; {{ -8i, #bytes }}) ]]
      normal
proc i__calloc(vnelem, velsiz) {
      sz := vnelem i* velsiz;
      bl := [mem_alloc](-8i, sz);
      b := l-nth(bl, 0i);
      u := [mem_store]("u64", b, -8i, {{ "long", sz }});
      i := "i__store_zeros"(b, 0i, sz);
      ret := {{ b, 0i }};
      return
};